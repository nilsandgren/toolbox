#!/bin/bash

# vg - grep for stuff and open matches in vim
#
# Usage:
#   vg <pattern>
#   vg <grep options>
#
# Examples:
# 
#   Recursive grep for the word 'banana' in all files and folders:
#     vg banana
# 
#   Grep for the exact word 'banana', and exclude binary files:
#     vg -rnwI banana *
# 
# When the list of matches opens, use gF to jump to the file:line match
# under the cursor. Use :q to get back to the list of matching lines.
# 
# !! SUPER TIP !!
# Add the following to your .vimrc to open a match in a new tab with ,o
# nnoremap ,o <C-w>gF

# set -ex

MATCHFILE="$(mktemp)"

# Use git grep if inside a git repository
if git rev-parse --git-dir > /dev/null 2>&1; then
  GREP="git grep"
  DEFAULT_OPTIONS="-Iin"
else
  GREP="grep"
  DEFAULT_OPTIONS="-Iinr"
fi

function search
{
  if [ $# -eq 1 ]; then
    ${GREP} ${DEFAULT_OPTIONS} "$@" * > "$MATCHFILE"
  else
    ${GREP} -n "$@" > "$MATCHFILE"
  fi
  if [ $? -eq 0 ]; then
    return 0
  else
    return 1
  fi
}

function remove_match_file
{
  rm "$MATCHFILE"
  if [ $? -ne 0 ]; then
    echo "Failed to remove $MATCHFILE"
  fi
}

echo "Searching..."
search "$@"
result=$?

if [ $result -eq 0 ]; then
  echo "Done"
  vim "$MATCHFILE"
else
  echo "No matches found"
fi

remove_match_file
